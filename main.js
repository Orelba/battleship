(()=>{"use strict";const e=e=>{if("number"!=typeof e)throw new Error("You must pass a number as the length argument to Ship()");if(e<2||e>6)throw new Error("Ship length must be between 2 to 6");return{length:e,hitCount:0,hit(){this.hitCount+=1},isSunk(){return this.hitCount>=this.length}}},t=()=>{const e=new Array(100).fill().map((()=>({hasShip:!1,isShot:!1}))),t=e=>{const t=e.toString();let a,r;return 1===t.length?(r=Number(t[0]),a=0):(a=Number(t[0]),r=Number(t[1])),[a,r]},a=(e,t,a)=>{const r=[];for(let n=0;n<e.length;n+=1)"x"===a?r.push(t+n):r.push(t+10*n);return r},r=e=>{const a=new Set,r=[[-1,-1],[-1,0],[-1,1],[0,-1],[0,1],[1,-1],[1,0],[1,1]];for(let n=0;n<e.length;n+=1){const o=t(e[n]);for(let e=0;e<r.length;e+=1){const t=r[e][0]+o[0],n=r[e][1]+o[1],s=9;t<0||t>s||n<0||n>s||a.add(Number([t,n].join("")))}}return a.forEach((t=>{e.includes(t)&&a.delete(t)})),Array.from(a)},n=t=>!t.some((t=>!e[t]))&&!t.some((t=>e[t].hasShip))&&![9,19,29,39,49,59,69,79,89].some((e=>[e,e+1].every((e=>t.includes(e))))),o=(t,o,s)=>{const c=a(t,o,s),l=r(c);return!(!n(c)||(i=l,i.some((t=>e[t].hasShip))));var i},s=t=>!!e[t].hasShip;return{board:e,createLocationArray:a,getNeighborArray:r,checkCollisions:n,isPlacementValid:o,placeShip:(t,r,n="x")=>{const s=a(t,r,n);if(!o(t,r,n))throw new Error(`Placement of ship of length ${t.length} at index ${r} on axis ${n.toUpperCase()} is not valid.`);return s.forEach((a=>{e[a].hasShip=t})),!0},checkIfShotHit:s,receiveAttack:t=>{s(t)&&e[t].hasShip.hit(),e[t].isShot=!0},isGameOver:()=>{const t=new Set;let a=0;return e.forEach((e=>{e.hasShip&&t.add(e.hasShip)})),t.forEach((e=>{e.isSunk()&&(a+=1)})),t.size===a}}},a=e=>{const t=(e,t)=>!t.board[e].isShot&&(t.receiveAttack(e),!0);return{name:e,attack:t,makeRandomAttack:e=>{const a=(r=e.board.reduce(((e,t,a)=>(t.isShot||e.push(a),e)),[]))[Math.floor(Math.random()*r.length)];var r;return t(a,e)}}};class r{static loadGameUI(){const e=document.querySelector(".board.friendly"),t=document.querySelector(".board.enemy");r.renderGridCells(e),r.renderGridCells(t)}static renderGridCells(e){for(let t=0;t<100;t+=1){const t=document.createElement("div");t.classList.add("cell"),e.appendChild(t)}}static renderShipCell(e){e.classList.add("ship")}static renderHit(e){const t=document.createElement("img");t.src="/images/hit.png",t.height=35,t.width=35,e.appendChild(t),e.classList.add("hit")}static renderMiss(e){const t=document.createElement("div");t.classList.add("dot"),e.classList.add("miss"),e.appendChild(t)}static clearGameboardCells(e){e.forEach((e=>{e.classList.remove("ship","hit","miss"),e.replaceChildren()}))}static clearAllGameboardCells(){const e=document.querySelectorAll(".board.friendly .cell"),t=document.querySelectorAll(".board.enemy .cell");r.clearGameboardCells(e),r.clearGameboardCells(t)}static renderPlayerGameboard(e){const t=document.querySelectorAll(".board.friendly .cell");r.clearGameboardCells(t),e.board.forEach(((e,a)=>{e.hasShip&&e.isShot?r.renderHit(t[a]):e.hasShip&&!e.isShot?r.renderShipCell(t[a]):!e.hasShip&&e.isShot&&r.renderMiss(t[a])}))}static renderEnemyGameboard(e){const t=document.querySelectorAll(".board.enemy .cell");r.clearGameboardCells(t),e.board.forEach(((e,a)=>{e.hasShip&&e.isShot?r.renderHit(t[a]):!e.hasShip&&e.isShot&&r.renderMiss(t[a])}))}static showOverlay(){document.querySelector(".overlay").classList.add("show")}static clearOverlay(){document.querySelector(".overlay").replaceChildren()}static hideOverlay(){document.querySelector(".overlay").classList.remove("show"),r.clearOverlay()}static renderPlacementOverlay(){const e=document.createElement("div");e.classList.add("modal");const t=document.createElement("h1");t.textContent="Welcome to the battle";const a=document.createElement("h2");a.classList.add("placement-text");const n=document.createElement("span");n.textContent="Place Your ";const o=document.createElement("span");o.classList.add("type"),o.textContent="Carrier",a.append(n,o);const s=document.createElement("div");s.classList.add("placement-container");const c=document.createElement("button");c.classList.add("rotate-btn"),c.setAttribute("data-axis","x");const l=document.createElement("span");l.textContent="Rotate";const i=document.createElement("img");i.src="images/rotate.svg",i.width=15,i.height=15,c.append(l,i);const d=document.createElement("div");d.classList.add("board"),r.renderGridCells(d),s.append(c,d);const m=document.createElement("button");m.classList.add("main-btn","start"),m.textContent="Start Game",e.append(t,a,s,m),document.querySelector(".overlay").appendChild(e),r.showOverlay()}static placementBoardHoverHandler(e,t,a){const r=document.querySelector(".rotate.btn").getAttribute("data-axis"),n=e.target,o=Array.prototype.indexOf.call(t.children,n);n.classList.contains("cell")&&a(o,r)}static placementBoardClickHandler=(e,t,a)=>{document.querySelector(".rotate-btn").getAttribute("data-axis");const r=e.target;Array.prototype.indexOf.call(t.children,r),r.classList.contains("cell")&&console.log("click")};static initPlacementBoardEventListeners(e,t,a){const n=document.querySelector(".placement-container .board");n.addEventListener("hover",(t=>r.placementBoardHoverHandler(t,n,e))),n.addEventListener("click",(e=>r.placementBoardClickHandler(e,n,t)))}static rotateBtnEventHandler(){const e=document.querySelector(".rotate-btn");"x"===e.getAttribute("data-axis")?e.setAttribute("data-axis","y"):e.setAttribute("data-axis","x")}static initRotateBtnEventListener(){document.querySelector(".rotate-btn").addEventListener("click",r.rotateBtnEventHandler)}static boardEventHandler(e,t,a){const r=e.target,n=Array.prototype.indexOf.call(t.children,r);r.classList.contains("cell")&&a(n)}static initEnemyBoardEventListener(e){const t=document.querySelector(".board.enemy");t.addEventListener("click",(a=>r.boardEventHandler(a,t,e)))}static renderEndGame(){}}class n{static player=a("Friendly");static enemy=a("Enemy");static playerBoard=t();static enemyBoard=t();static takesTurn="Player";static initGame(){r.loadGameUI(),n.preGameShipPlacement(),r.initEnemyBoardEventListener(n.makePlayerMove)}static setShipLocations(){const t=e(5),a=e(4),o=e(3),s=e(3),c=e(2),l=e(5),i=e(4),d=e(3),m=e(3),h=e(2);n.playerBoard.placeShip(t,2),n.playerBoard.placeShip(a,34),n.playerBoard.placeShip(o,20,"y"),n.playerBoard.placeShip(s,75),n.playerBoard.placeShip(c,82,"y"),n.enemyBoard.placeShip(l,5),n.enemyBoard.placeShip(i,43),n.enemyBoard.placeShip(d,70,"y"),n.enemyBoard.placeShip(m,77),n.enemyBoard.placeShip(h,28,"y"),r.renderPlayerGameboard(n.playerBoard),r.renderEnemyGameboard(n.enemyBoard)}static preGameShipPlacement(){const a=t(),n=[e(5),e(4),e(3),e(3),e(2)];r.renderPlacementOverlay(),r.initRotateBtnEventListener(),r.initPlacementBoardEventListeners(a.isPlacementValid,a.placeShip,n)}static resetGameState(){n.player=a("Friendly"),n.enemy=a("Enemy"),n.playerBoard=t(),n.enemyBoard=t(),n.takesTurn="Player",n.setShipLocations()}static endGame(){r.renderEndGame(),r.clearAllGameboardCells(),n.resetGameState()}static makeEnemyMove(){n.enemy.makeRandomAttack(n.playerBoard),r.renderPlayerGameboard(n.playerBoard),n.playerBoard.isGameOver()?n.endGame():n.takesTurn="Player"}static async makePlayerMove(e){"Player"===n.takesTurn&&(n.player.attack(e,n.enemyBoard),r.renderEnemyGameboard(n.enemyBoard),n.enemyBoard.isGameOver()?n.endGame():(n.takesTurn="Enemy",n.makeEnemyMove()))}static sleepRandomTimeBetween(e,t){const a=Math.floor(Math.random()*(t-e+1)+e);return new Promise((e=>setTimeout(e,a)))}}document.addEventListener("DOMContentLoaded",n.initGame)})();
//# sourceMappingURL=main.js.map